{"version":3,"sources":["App.js","index.js"],"names":["App","useState","text","setText","timeRemaining","settimeRemaining","isTimeRunning","setIsTimeRunning","words","setWords","textInputRef","useRef","useEffect","setTimeout","time","trim","split","filter","word","length","wordCount","onChange","e","value","target","disabled","ref","onClick","current","focus","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNA8DeA,MA3Df,WACE,IACA,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0CF,mBAFpB,IAEtB,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA0CJ,oBAAS,GAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KACA,EAA0BN,mBAAS,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACMC,EAAeC,iBAAO,MAmC5B,OAVAC,qBAAU,WACJN,GAAiBF,EAAgB,EACnCS,YAAW,WACTR,GAAiB,SAACS,GAAD,OAAUA,EAAO,OACjC,KACwB,IAAlBV,IATXG,GAAiB,GACjBE,EAhBF,SAAmBP,GAEjB,OADkBA,EAAKa,OAAOC,MAAM,KACnBC,QAAO,SAACC,GAAD,MAAmB,KAATA,KAAaC,OActCC,CAAUlB,OAWlB,CAACE,EAAeE,IAGjB,qCACE,uDACA,0BACEe,SArCN,SAAsBC,GACpB,IAAQC,EAAUD,EAAEE,OAAZD,MACRpB,EAAQoB,IAoCJA,MAAOrB,EACPuB,UAAWnB,EACXoB,IAAKhB,IAEP,kDAAqBN,KACrB,wBAAQuB,QAlCZ,WACEpB,GAAiB,GACjBF,EAlBoB,IAmBpBF,EAAQ,IACRM,EAAS,GACTC,EAAakB,QAAQH,UAAW,EAChCf,EAAakB,QAAQC,SA4BSJ,SAAUnB,EAAtC,mBAGA,8CAAiBE,SCpDvBsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.ea758d4a.chunk.js","sourcesContent":["import { useEffect, useState, useRef } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const STARTING_TIME = 10;\n  const [text, setText] = useState(\"\");\n  const [timeRemaining, settimeRemaining] = useState(STARTING_TIME);\n  const [isTimeRunning, setIsTimeRunning] = useState(false);\n  const [words, setWords] = useState(0);\n  const textInputRef = useRef(null)\n\n  function handleChange(e) {\n    const { value } = e.target;\n    setText(value);\n  }\n  function wordCount(text) {\n    const wordArray = text.trim().split(\" \");\n    return wordArray.filter((word) => word !== \"\").length;\n  }\n\n  function startGame() {\n    setIsTimeRunning(true);\n    settimeRemaining(STARTING_TIME);\n    setText(\"\");\n    setWords(0);\n    textInputRef.current.disabled = false\n    textInputRef.current.focus()\n  }\n\n  function endGame() {\n    setIsTimeRunning(false);\n    setWords(wordCount(text));\n  }\n\n  useEffect(() => {\n    if (isTimeRunning && timeRemaining > 0) {\n      setTimeout(() => {\n        settimeRemaining((time) => time - 1);\n      }, 1000);\n    } else if (timeRemaining === 0) {\n      endGame();\n    }\n  }, [timeRemaining, isTimeRunning]);\n\n  return (\n    <>\n      <h1>How fast do you type?</h1>\n      <textarea\n        onChange={handleChange}\n        value={text}\n        disabled={!isTimeRunning}\n        ref={textInputRef}\n      />\n      <h4>Time reminaing: {timeRemaining}</h4>\n      <button onClick={startGame} disabled={isTimeRunning}>\n        Start\n      </button>\n      <h1>Word count: {words}</h1>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}